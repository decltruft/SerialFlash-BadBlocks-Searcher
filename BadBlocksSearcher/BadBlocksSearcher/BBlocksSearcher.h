#pragma once

#include <iostream>
#include "SerialFlashHandler.h"

#define LOGGER (std::cout)

/*
	ѕри наличии хот€ бы одного bad-байта внутри страницы пам€ти - битой считаетс€ вс€ страница (т.к. 256 байт - минимально возможный объЄм дл€ записи во флешь).
	ѕри наличии хот€ бы одной bad-page внутри сектора - битым считаетс€ весь сектор. ѕри наличии хот€ бы одного bad-sector внутри сектора - битым считаетс€ весь блок (bad-block).
	ѕеред началом провеки устанавливаем флаг начала проверки пам€ти на bad-blocks обработчика SerialFlash. “огда, при каждой последовательной записи в страницы,
	он будет предварительно сохран€ть их в свои буферы.
	ѕроверка осуществл€етс€ следующим образом: BBlocksSearcher отправл€ет на запись свою тестовую страницу из 256 байт, рассчитав еЄ контрольную сумму CRC16,
	в текущую провер€емую страницу. ѕо окончанию записи снова делаетс€ запрос в SerialFlash, но уже дл€ расчЄта CRC16. ≈сли контрольные суммы не совпадают
	(из-за того, что в случае bad-statement - байт посто€нно хранит значение 0xFF) - выводитс€ адрес начала этой страницы с пометкой "Bad". 	
*/

class BBlocksSearcher
{
public:
	BBlocksSearcher(SerialFlashHandler* handler = nullptr);

public:
	void checking_flash_pull();

private:
	SerialFlashHandler* m_flash_handler;
	uint16_t m_trial_crc16;
};

